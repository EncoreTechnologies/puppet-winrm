# Check HTTPS Listener configurations
# -----------------------------------------------------------
#
# This script checks the current HTTPS listener to see if see
# if the listener is active and if it should be.

# Puppet does not give the booleans to powershell in the correct way, they are given as strings.
# So once given we need to convert them to true booleans so that the logic below will work
function Convert-StringToBoolean {
  Param (
    [string]$BoolString
  )

  $boolReturn = $true
  If ($BoolString.ToLower() -eq 'false') {
    $boolReturn = $false
  }

  return $boolReturn
}

# Setup error handling.
$ErrorActionPreference = "Stop"

Try {
  $SubjectName = '<%= @cert_common_name %>'
  $HttpsListenerEnable = Convert-StringToBoolean -BoolString '<%= @https_listener_enable %>'
  $CertificateHash = '<%= @certificate_hash %>'
  $CertValidityDays = <%= @cert_validity_days %>

  $listeners = @(Get-WSManInstance -ResourceURI 'winrm/config/Listener' -Enumerate)
  If ($HttpsListenerEnable) {
    $https_listeners = @($listeners | Where {$_.Transport -eq "HTTPS"})
    If ($https_listeners) {
      if ($CertificateHash) {
        Foreach ($https_list in $https_listeners) {
          If ($https_list.CertificateThumbprint -ne $CertificateHash) {
            # Certificate hash doesn't match
            Exit 1
          }
        }
        # if all certs match, we'll exit 1 below (fall through)
      }
      # if all certs match, we'll exit 1 below (fall through)
    }
    Else {
      # No ssl listener and there there should be
      Exit 1
    }
  }
  Exit 0
} Catch {
  $exception_str = $_ | Out-String
  Write-Output "[$(Get-Date -Format 'o')] an error occurred: $exception_str"
  Exit 0
}
